language: java
jdk:
  - oraclejdk8
install: true

env:
  global:
  - secure: "uMjedZD3EUoSP8Mj7L2IgYRy0rOvvuJfIx9GYlx13u2j4Zj8c+zTBRGpkldqx4rvNweqejgCLnkrwc2fS4X6GtpE4nab43141QicCv/hhqzQVN3Z+5mcW6r+kSBqgwfwgvnrcj0kNnPXje7rF/D5Wuw7BHCV3Vmcl7DZ2EnNVe0j/AMQMefMrf/d1X14rwNvAnO2B9ngaJET9txgVeTAjFUaAPA+83v2XGGPbYrgEkHdVO5HikHwEfyeB4mWgCCj9LLg/HyoEewt9Nt6kMtzuXYGNarypUqoCqinzch87BrrQZAb9esTZo8+pjROsficeboiWrEI0zQObYPxQVvuv2stDh85W8Z80VsSHj/9J7VDljSTzQTHdWVfa2DVpH0BHJdqCVgVy6+AXshWIyKeIZUbcWQfkd73Edql8CA9+k+docYc8GB5KnsKzq7/czvpiBEFVwCEbwLhuLr0Ag3HfgEoM3y+J25VXuBOqTGugihhXnpwoxj4oNAMNl8tWQHD04Wv1iKirJjXAZGUp0Q1grhElKxivDqdKBbvBdL/fMyiOQEOBtv6UZe1BcV8fVru9JhdIpEh1BgOUpENA6Cu4jKEgFgNMCphR9Au8c2QkvlZfwlocwm/txjLrRUpLGcnpdCY2lrvoLdBxas/urTX51mlTKGoVhnvd4WbR9dq9/I="
  - secure: "BFIMfkzcWCjA+6TjHvNCKfTOZCsK+j22Z3/364dZZpIa5m1fg1f31J4rAYrvQgWzFgZ0df4M4H6ayHpoDHlEVIYradk0y5hZunQ730P/2B+Vot8fSTjP4JaQ8gJ4dZrbcLc2eaSs3f8LHafOxAedRKTXthOTDJzEyUFAyq7yK/lo+TRT2KVovIZKqt0JLwqnF/jZtYTTj3cL8uEWWN8pD3eUhfTJbdVpAau7zZHVUCPe+HaOEPHp0JJ9LIdHJmh3v8aNrXOifNVkkNlUWFAmme5IBHFimfldlXy+Vkdou/vDSJr+Si2EtGzoRLzORqMs/Ws5aAIWqjidx01vB2Fbu17JKNHjCJzYpwZwdXzhXDFqRZLT9O2WvppYgfU2LSjKkkDQiIBBVMdlYjDQlY3DD970FrwS3bZEpQ9Etd24yEcdUGKfu5ZTsqDLTgo9+OlDsRlmGe3fhyNZSXaoCxpt/Z0P08O2DVQrYLjI+lmmsj/rbXVI+6F4ttPyb+f/Y1ZkZK3Fdy/J+5z9kiGdO6NUKWqCho+cFyFKUsF5js7Xpv6BLjXni4rTiiEXlAG/bAyFMOLe9PJ4tDKp9B1R3r3Ah1WnhnK9G35uoA/wV7jPCHivqfW3aCqfpyopog60z1rImTm35g9vwICmtUvyqnSg0XClzYTX/FPjGq+wxww3LjQ="
  - secure: "rrGIYUlDFB/S43dyImkjl0KydTEJIqSsB8StFX4UwOv6RBv+F3wFbXXLbEFpjYc98bcWOVejvxZ/b6Ox8DNefhY/DHX/h4RHLmISPsDcStgTz4YmqRdhiYylSdP1WzNn2CUPBjsV/57Tk3qNnZ7CS/DhzzGGZIODzR779WuCHK+9Zi31xHQZMC1NVOHWk2mBcibFoACE0R7wOqwIqfSOARBY1Fp61NBFnQHdmreQE/zUyhmmP6yFwBx4Ef/QcV/q0UJiwOPSqsP/BqwgyX7rMw1FZMYvKr2iJfHAAZuexGSwoFw1lwJ4wSfz3dsfy6QGePs1TuTzEc+YcyQdcvDZVYymfl3xtO/n6EWWoGNiwvP9HdT7GgDhYtdAOX+EcKA/6Tdi8ZlCy+mMBwG6gJBE5MoJFmCYKpXG51UxOZhyBzrdCO3EY+DU1RvVJAzLVvhBtSqgfDQAMT2Os6AQMhMNelHaNDFUgBfJ43jZcEE5Cps+Nu/UKnMgd8jT0wAx4PgiInBLb9+o898/Fa0Agwix7WAzwryYwaRIvWEifUmCQ1tHtzAVmwlYpLQKJo57uvrdqQ6JWs751jayROwMJZXrYxLxJ3oUn5M9pmrtbspMGQduT+KXqV6V5XKfn67xpjlEjvqXuf4n6afjxaRWRN3jomGPt7VCTVyCazdvGUCrfXg="
  - COMMIT: ${TRAVIS_COMMIT::7}
addons:
  sonarcloud:
    organization: harishkadamudi-github
    token:
      secure: $SONAR_TOKEN

script:
  - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.sonar/cache'

sudo: required
#dist: trusty

services:
  - docker

#dist: trusty
#jobs:
#  include:
#    - stage: build docker image
#      script:
#      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#      - docker images
#      - docker build -t com.eizzy.recharge.rest:latest -f Dockerfile .
#      - docker images
#      - docker tag eizzy-recharge_rest $DOCKER_USERNAME/eizzy-recharge_rest
#      - docker push $DOCKER_USERNAME/eizzy-recharge_rest
    #- stage: test
    #  script: docker run --rm $DOCKER_USERNAME/travis-ci-build-stages-demo cat hello.txt
    #- script: docker run --rm $DOCKER_USERNAME/travis-ci-build-stages-demo cat hello.txt
script:
  - echo "harikadi2788" >  | docker login --username harishkadamudi --password-stdin
  - cd rest/
  #- mvn clean install
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  - export IMAGE_NAME=harishkadamui/recharge-rest
  - docker build -t $IMAGE_NAME:$TAG --tag "$IMAGE_NAME" -f Dockerfile .
  - docker run -d $IMAGE_NAME:$TAG
  - docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:$TAG"
  - docker ps

#deploy:
#  provider: script
#  script: docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:$TAG"
#  on:
#    branch: develop

#after_success:
  #- docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD#
  #- export TAG=`if [ "$TRAVIS_BRANCH" == "develop" || "$TRAVIS_BRANCH" == "master"]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  #- export IMAGE_NAME=harishkadamui/recharge-rest
  #- docker build -t $IMAGE_NAME:$COMMIT -f Dockerfile .
  #- docker images
  #- docker tag $IMAGE_NAME:latest
  #- docker push $IMAGE_NAME

notifications:
  email: false