language: java
jdk:
  - oraclejdk8
install: true

env:
  global:
  - secure: "uMjedZD3EUoSP8Mj7L2IgYRy0rOvvuJfIx9GYlx13u2j4Zj8c+zTBRGpkldqx4rvNweqejgCLnkrwc2fS4X6GtpE4nab43141QicCv/hhqzQVN3Z+5mcW6r+kSBqgwfwgvnrcj0kNnPXje7rF/D5Wuw7BHCV3Vmcl7DZ2EnNVe0j/AMQMefMrf/d1X14rwNvAnO2B9ngaJET9txgVeTAjFUaAPA+83v2XGGPbYrgEkHdVO5HikHwEfyeB4mWgCCj9LLg/HyoEewt9Nt6kMtzuXYGNarypUqoCqinzch87BrrQZAb9esTZo8+pjROsficeboiWrEI0zQObYPxQVvuv2stDh85W8Z80VsSHj/9J7VDljSTzQTHdWVfa2DVpH0BHJdqCVgVy6+AXshWIyKeIZUbcWQfkd73Edql8CA9+k+docYc8GB5KnsKzq7/czvpiBEFVwCEbwLhuLr0Ag3HfgEoM3y+J25VXuBOqTGugihhXnpwoxj4oNAMNl8tWQHD04Wv1iKirJjXAZGUp0Q1grhElKxivDqdKBbvBdL/fMyiOQEOBtv6UZe1BcV8fVru9JhdIpEh1BgOUpENA6Cu4jKEgFgNMCphR9Au8c2QkvlZfwlocwm/txjLrRUpLGcnpdCY2lrvoLdBxas/urTX51mlTKGoVhnvd4WbR9dq9/I="
  - secure: "mruPIC8Zioj3jq29Vd1wXULtPk24I3+jKEfPpwF1NX5W9L28/lvQD9ErPJAOLbAT3aNwEVEn5jSnzJ6nJGxqwUky6z0+Y1ccaCfSl4/hH2ddNcKqVh1O39V4iobqyUayX/SqMUD8oa0X4jOp0AtnWfB3AzxzNXVUjOxHvwQ7zfM1tWPg1DqBSTWGD4vtNIctvaM0kXZV5SIPjFHesfA6Tubm4ZImB4Wopa0pjIptok55NzpWSyugDZD3HFgJlRLG89fWBYlojS+nwtTc8sU6Y+r81mkIqXfwFe7ALnP+2EcJal9IMaQRD9pANcU7b1Jw+R1TGOfKbDiEA/+W507tMqD6jbFhoy8AbSQ2YR1XA+ug6YnHbKEoePTA1G/0ncQ13CwtKV9lRSWJr62wUQb45JAH5DUFH/jZ2JnIpVNWglbdAqRqJX8eWx12n3efp2dcLbrZIyZz6SVrtIiam09a4LUFh/cey3lX7oShcotqEtSlfomXTHDKF9WKGJ8M6aDPLevYaVws4q1CMDD96ml1oiQa1M6zKT/LV7bIgXkgNU0apDKP3mQbpTdDnah6NEJCU+o695UeTTi7uT1YHjBm8qHPXf4/nLnvNxYn30pnGSiuG2DrdDl1m7npUSSrpLOCB5jAKnhLz5VlN9n1mRdMQfQvRbrMtUQIz/58GkLh03Q="
  - COMMIT: ${TRAVIS_COMMIT::7}
addons:
  sonarcloud:
    organization: harishkadamudi-github
    token:
      secure: $SONAR_TOKEN

script:
  - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar

cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.sonar/cache'

sudo: required
#dist: trusty

services:
  - docker

#dist: trusty
#jobs:
#  include:
#    - stage: build docker image
#      script:
#      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#      - docker images
#      - docker build -t com.eizzy.recharge.rest:latest -f Dockerfile .
#      - docker images
#      - docker tag eizzy-recharge_rest $DOCKER_USERNAME/eizzy-recharge_rest
#      - docker push $DOCKER_USERNAME/eizzy-recharge_rest
    #- stage: test
    #  script: docker run --rm $DOCKER_USERNAME/travis-ci-build-stages-demo cat hello.txt
    #- script: docker run --rm $DOCKER_USERNAME/travis-ci-build-stages-demo cat hello.txt
script:
  #- echo "$DOCKER_PASSWORD" > | docker login --username harishkadamudi --password-stdin
  - docker login --username harishkadamudi --password $DOCKER_PASSWORD
  - cd rest/
  - mvn clean install
  - export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  - export IMAGE_NAME=harishkadamui/eizzy-recharge-rest
  - docker build -t $IMAGE_NAME:$TAG --tag "$IMAGE_NAME" -f Dockerfile .
  - docker run -d $IMAGE_NAME:$TAG
  #- docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:$TAG"
  - docker ps

#deploy:
#  provider: script
#  script: docker push "${IMAGE_NAME}:latest" && docker push "${IMAGE_NAME}:$TAG"
#  on:
#    branch: develop

after_success:
  #- docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD#
  #- export TAG=`if [ "$TRAVIS_BRANCH" == "develop" || "$TRAVIS_BRANCH" == "master"]; then echo "latest"; else echo $TRAVIS_BRANCH; fi`
  #- export IMAGE_NAME=harishkadamui/recharge-rest
  #- docker build -t $IMAGE_NAME:$COMMIT -f Dockerfile .
  #- docker images
  #- docker tag $IMAGE_NAME:latest
  - docker push $IMAGE_NAME:latest

notifications:
  email: false